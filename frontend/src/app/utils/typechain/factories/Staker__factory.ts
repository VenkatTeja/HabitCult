/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staker, StakerInterface } from "../Staker";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_parent",
        type: "address",
      },
    ],
    name: "setParent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600280546001600160a01b0319908116731b02da8cb0d097eb8d57a175b88c7d8b479975061790915560038054821673c2132d05d31c914a87c6611c10748aeb04b58e8f17905560048054909116738f3cf7ad23cd3cadbd9735aff958023239c6a06317905534801561007657600080fd5b5061008033610085565b6100d5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610bb7806100e46000396000f3fe6080604052600436106100555760003560e01c80631499c5921461005a578063715018a61461007c5780638da5cb5b14610091578063a694fc3a146100be578063d0e30db01461007a578063f2fde38b146100ec575b600080fd5b34801561006657600080fd5b5061007a61007536600461084e565b61010c565b005b34801561008857600080fd5b5061007a610161565b34801561009d57600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b3480156100ca57600080fd5b506100de6100d9366004610955565b610197565b6040519081526020016100b5565b3480156100f857600080fd5b5061007a61010736600461084e565b61064b565b6000546001600160a01b0316331461013f5760405162461bcd60e51b815260040161013690610a5b565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461018b5760405162461bcd60e51b815260040161013690610a5b565b61019560006106e6565b565b60035460025460405163095ea7b360e01b81526001600160a01b039182166004820181905260248201859052600093929092169190829063095ea7b390604401602060405180830381600087803b1580156101f157600080fd5b505af1158015610205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102299190610935565b506000610237856002610736565b6040805160028082526060820183529293506000929091602083019080368337505060035482519293506001600160a01b03169183915060009061028b57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101526004548251911690829060019081106102ca57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505061031a6040518060400160405280600e81526020016d68616c66416d6f756e743a20257360901b81525083610749565b60006001600160a01b0384166338ed17398483853061033a426014610b00565b6040518663ffffffff1660e01b815260040161035a959493929190610a90565b600060405180830381600087803b15801561037457600080fd5b505af1158015610388573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103b09190810190610875565b90506104346040518060400160405280600f81526020016e616d6f756e74733a2025732c20257360881b815250826000815181106103fe57634e487b7160e01b600052603260045260246000fd5b60200260200101518360018151811061042757634e487b7160e01b600052603260045260246000fd5b6020026020010151610792565b60045460025482516001600160a01b0392831692839263095ea7b3929116908590600190811061047457634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b81526004016104ad9291906001600160a01b03929092168252602082015260400190565b602060405180830381600087803b1580156104c757600080fd5b505af11580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff9190610935565b506003546004548351600092839283926001600160a01b03808c169363e8e3370093908216929116908b908a90600190811061054b57634e487b7160e01b600052603260045260246000fd5b6020026020010151600080304260146105649190610b00565b60405160e08a901b6001600160e01b03191681526001600160a01b039889166004820152968816602488015260448701959095526064860193909352608485019190915260a484015290921660c482015260e481019190915261010401606060405180830381600087803b1580156105db57600080fd5b505af11580156105ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610613919061096d565b92509250925061063d604051806060016040528060278152602001610b5b602791398484846107de565b9a9950505050505050505050565b6000546001600160a01b031633146106755760405162461bcd60e51b815260040161013690610a5b565b6001600160a01b0381166106da5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610136565b6106e3816106e6565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006107428284610b24565b9392505050565b61078e828260405160240161075f9291906109e5565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905261082d565b5050565b6107d98383836040516024016107aa93929190610a07565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b17905261082d565b505050565b610827848484846040516024016107f89493929190610a2c565b60408051601f198184030181529190526020810180516001600160e01b03166304772b3360e11b17905261082d565b50505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006020828403121561085f578081fd5b81356001600160a01b0381168114610742578182fd5b60006020808385031215610887578182fd5b825167ffffffffffffffff8082111561089e578384fd5b818501915085601f8301126108b1578384fd5b8151818111156108c3576108c3610b44565b8060051b604051601f19603f830116810181811085821117156108e8576108e8610b44565b604052828152858101935084860182860187018a1015610906578788fd5b8795505b8386101561092857805185526001959095019493860193860161090a565b5098975050505050505050565b600060208284031215610946578081fd5b81518015158114610742578182fd5b600060208284031215610966578081fd5b5035919050565b600080600060608486031215610981578182fd5b8351925060208401519150604084015190509250925092565b60008151808452815b818110156109bf576020818501810151868301820152016109a3565b818111156109d05782602083870101525b50601f01601f19169290920160200192915050565b6040815260006109f8604083018561099a565b90508260208301529392505050565b606081526000610a1a606083018661099a565b60208301949094525060400152919050565b608081526000610a3f608083018761099a565b6020830195909552506040810192909252606090910152919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060a082018783526020878185015260a0604085015281875180845260c0860191508289019350845b81811015610adf5784516001600160a01b031683529383019391830191600101610aba565b50506001600160a01b03969096166060850152505050608001529392505050565b60008219821115610b1f57634e487b7160e01b81526011600452602481fd5b500190565b600082610b3f57634e487b7160e01b81526012600452602481fd5b500490565b634e487b7160e01b600052604160045260246000fdfe616d6f756e74413a2025732c20616d6f756e74423a2025732c206c69717569646974793a202573a26469706673582212205462b9d8c4702f9c3798e81bbf0c2719b6356b34b825214765fd2e52b64c0f3864736f6c63430008040033";

export class Staker__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staker> {
    return super.deploy(overrides || {}) as Promise<Staker>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Staker {
    return super.attach(address) as Staker;
  }
  connect(signer: Signer): Staker__factory {
    return super.connect(signer) as Staker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakerInterface {
    return new utils.Interface(_abi) as StakerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Staker {
    return new Contract(address, _abi, signerOrProvider) as Staker;
  }
}
